#include<opencv2/opencv.hpp>
#include <time.h>
#include<iostream>
using namespace std;
using namespace cv;
Mat pic,pic_; Mat test;
Mat estar;
// RNG rng(12345);
int value=100,canny_num=3;
int main()
{
    VideoCapture capture(0);
    while(1)
    {
    Mat pic;
    capture>>pic;
    cvtColor(pic,test,COLOR_BGR2HSV);
    blur(test,test,Size(3,3));                                                            //平滑处理
    inRange(test,Scalar(49,86,0.130),Scalar(83,131,139),test);                             //阈值化
    imshow("wnwinwnw",test);
    Canny(test,test,100,200);
    vector<vector<Point> > contours;
    findContours( test, contours, RETR_TREE, CHAIN_APPROX_SIMPLE, Point(0, 0) );            //寻找轮廓
    vector<vector<Point> > contours_poly( contours.size());
    vector<RotatedRect> minRect( contours.size() );
    vector<RotatedRect> minEllipse( contours.size() );
    //寻找最小包围矩形
    for( int i = 0; i < contours.size(); i++)
    {
        minRect[i] = minAreaRect( contours[i] );
    }
    for( int i = 0; i< contours.size(); i++)
    { 
         Rect rects = boundingRect(contours[i]);
        rectangle(pic, rects, Scalar(255.0,0), 2);
    }
    imshow( "Contours",pic);
    waitKey(30);
    }  
  
        
} 
